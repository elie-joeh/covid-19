// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using covid19.Data;

namespace covid19.Data.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20200615222952_CPI mock data 1")]
    partial class CPImockdata1
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.4")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("covid19.Data.CPI", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<decimal>("Coordinate")
                        .HasColumnType("decimal(7,4)");

                    b.Property<string>("GeographyName")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Ppdg")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("Reference_date")
                        .HasColumnType("datetime2");

                    b.Property<decimal>("Value")
                        .HasColumnType("decimal(7,4)");

                    b.Property<string>("Vector_Id")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("GeographyName");

                    b.ToTable("CPI");
                });

            modelBuilder.Entity("covid19.Data.Geography", b =>
                {
                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("Dead")
                        .HasColumnType("int");

                    b.Property<int>("Infected")
                        .HasColumnType("int");

                    b.HasKey("Name");

                    b.ToTable("Geography");

                    b.HasData(
                        new
                        {
                            Name = "CA",
                            Dead = 3999,
                            Infected = 50000
                        },
                        new
                        {
                            Name = "QC",
                            Dead = 500,
                            Infected = 10000
                        },
                        new
                        {
                            Name = "ON",
                            Dead = 399,
                            Infected = 7000
                        },
                        new
                        {
                            Name = "AB",
                            Dead = 200,
                            Infected = 5000
                        },
                        new
                        {
                            Name = "BC",
                            Dead = 150,
                            Infected = 6000
                        },
                        new
                        {
                            Name = "YT",
                            Dead = 2,
                            Infected = 50
                        },
                        new
                        {
                            Name = "PE",
                            Dead = 30,
                            Infected = 300
                        },
                        new
                        {
                            Name = "MB",
                            Dead = 40,
                            Infected = 500
                        },
                        new
                        {
                            Name = "NS",
                            Dead = 100,
                            Infected = 2000
                        },
                        new
                        {
                            Name = "NB",
                            Dead = 95,
                            Infected = 1500
                        },
                        new
                        {
                            Name = "NL",
                            Dead = 100,
                            Infected = 1200
                        },
                        new
                        {
                            Name = "SK",
                            Dead = 5,
                            Infected = 50
                        },
                        new
                        {
                            Name = "NU",
                            Dead = 20,
                            Infected = 100
                        },
                        new
                        {
                            Name = "NT",
                            Dead = 1,
                            Infected = 2
                        });
                });

            modelBuilder.Entity("covid19.Data.CPI", b =>
                {
                    b.HasOne("covid19.Data.Geography", "geo")
                        .WithMany("CPIs")
                        .HasForeignKey("GeographyName");
                });
#pragma warning restore 612, 618
        }
    }
}
